
function [Quad] = getQuadOnRefElement1D(num_q_points)

switch(num_q_points)

    case 1,
        % use a 1 pt quadrature exact for polynomials of degree 2(1)-1 = 1
        Quad.nq = 1;
        % quadrature weights [nqx1]
        Quad.what = [ 1.0 ];
        % quadrature points [nqxdim]
        Quad.xhat = [ 0.5];

    case 2,
        % use a 2 pt quadrature exact for polynomials of degree 2*(2)-1 = 3
        Quad.nq = 2;
        % quadrature weights [nqx1]
        Quad.what = [ 0.50000000000000000000000000000000;...
                      0.50000000000000000000000000000000];
        % quadrature points [nqxdim]
        Quad.xhat = [0.211324865405187117745425609749021;...
                     0.788675134594812882254574390250978];

    case 3,
        % use a 3 pt quadrature exact for polynomials of degree (2*(3)-1) = 5
        Quad.nq = 3;
        % quadrature weights [nqx1]
        Quad.what = [ 0.444444444444444444444444444444444;... 
                      0.277777777777777777777777777777777;...
                      0.277777777777777777777777777777777];
        % quadrature points [nqxdim]
        Quad.xhat = [ 0.500000000000000000000000000000000;...
                      0.112701665379258311482073460021760;...
                      0.887298334620741688517926539978239];

    case 4,
        % use a 4 pt quadrature exact for polynomials of degree (2*(4)-1) = 7
        Quad.nq = 4;
        % quadrature weights [nqx1]
        Quad.what = [0.326072577431273071313468025389000;...
                     0.326072577431273071313468025389000;...
                     0.173927422568726928686531974610999;...
                     0.173927422568726928686531974610999];
        % quadrature points [nqxdim]
        Quad.xhat = [0.330009478207571867598667120448377;...
                     0.669990521792428132401332879551622;...
                     0.069431844202973712388026755553595;...
                     0.930568155797026287611973244446404];
    case 5,
        % use a 5 pt quadrature exact for polynomials of degree 2(5)-1 = 9
        Quad.nq = 5;
        % quadrature weights [nqx1]
        Quad.what = [0.284444444444444444444444444444444;...
                     0.239314335249683234020645757417819;...
                     0.239314335249683234020645757417819;...
                     0.118463442528094543757132020359958;...
                     0.118463442528094543757132020359958];
        % quadrature points [nqxdim]
        Quad.xhat = [0.500000000000000000000000000000000;...
                     0.230765344947158454481842789649895;...
                     0.769234655052841545518157210350104;...
                     0.046910077030668003601186560850303;...
                     0.953089922969331996398813439149696];
    case 6,
        % use a 6 pt quadrature exact for polynomials of degree 2(6)-1 = 11
        Quad.nq = 6;
        % quadrature weights [nqx1]
        Quad.what = [0.180380786524069303784916756918858;...
                     0.180380786524069303784916756918858;...
                     0.233956967286345523694935171994775;...
                     0.233956967286345523694935171994775;...
                     0.085662246189585172520148071086366;...
                     0.085662246189585172520148071086366];
        % quadrature points [nqxdim]
        Quad.xhat = [0.830604693233132256830699797509952;...
                     0.169395306766867743169300202490047;...
                     0.380690406958401545684749139159644;...
                     0.619309593041598454315250860840355;...
                     0.033765242898423986093849222753002;...
                     0.966234757101576013906150777246997];
    otherwise,
        Quad.nq = 0;
        Quad.what = [];
        Quad.xhat = [];
end

